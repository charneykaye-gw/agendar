{"version":3,"sources":["config.js","App.js","reportWebVitals.js","index.js"],"names":["GOOGLE_CLIENT_ID","App","props","state","isSignedIn","script","document","createElement","src","async","defer","onload","initAuth","meta","name","content","head","appendChild","successCallback","this","onSuccess","bind","window","gapi","load","auth2","init","client_id","then","console","log","setState","get","opts","width","height","onsuccess","signin2","render","err","self","signOut","location","reload","onClick","doLogout","id","className","getContent","getError","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"mOAAaA,G,MACX,4EC8HaC,E,kDAzHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,YAAY,GAHG,E,gEAOE,IAAD,OACZC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,yCACbH,EAAOI,OAAQ,EACfJ,EAAOK,OAAQ,EACfL,EAAOM,OAAS,WACd,EAAKC,YAEP,IAAMC,EAAOP,SAASC,cAAc,QACpCM,EAAKC,KAAO,0BACZD,EAAKE,QAAU,sCACfT,SAASU,KAAKC,YAAYJ,GAC1BP,SAASU,KAAKC,YAAYZ,K,iCAGhB,IAAD,OACHa,EAAkBC,KAAKC,UAAUC,KAAKF,MAE5CG,OAAOC,KAAKC,KAAK,SAAS,WACxB,EAAKC,MAAQF,KAAKE,MAAMC,KAAK,CAC3BC,UAAW3B,IAGb,EAAKyB,MAAMG,MAAK,WACdC,QAAQC,IAAI,WACZ,EAAKC,SAAS,CACZ3B,WAAY,EAAKqB,MAAMrB,WAAW4B,cAKxCV,OAAOC,KAAKC,KAAK,WAAW,WAG1B,IAAIS,EAAO,CACTC,MAAO,IACPC,OAAQ,GACRR,UAAW3B,EACXoC,UAAWlB,GAEbK,KAAKc,QAAQC,OAAO,cAAeL,Q,kCAKrCJ,QAAQC,IAAI,cACZX,KAAKY,SAAS,CACZ3B,YAAY,EACZmC,IAAK,S,iCAIG,IAAD,OACLC,EAAOrB,KACXA,KAAKM,MAAMgB,UAAUb,MACnB,WACEY,EAAKT,SAAS,CACZ3B,YAAY,EACZmC,IAAK,OAEPjB,OAAOoB,SAASC,QAAO,MAEzB,WACE,EAAKZ,SAAS,CACZ3B,YAAY,EACZmC,IAAK,2B,mCAMC,IAAD,OACX,OAAIpB,KAAKhB,MAAMC,WAEX,gCACE,8DACA,wBAAQwC,QAAS,kBAAM,EAAKC,YAA5B,uBAKF,gCACE,8EACA,wBAAQC,GAAG,cAAX,oC,iCAON,OAAI3B,KAAKhB,MAAMoC,IAEX,8BACE,mBAAGQ,UAAU,QAAb,SAAsB5B,KAAKhB,MAAMoC,QAGzB,K,+BAKd,OACE,qBAAKQ,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,yCAAW,4CACX,qEACC5B,KAAK6B,aACL7B,KAAK8B,oB,GAnHEC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASrB,OACP,cAAC,IAAMsB,WAAP,UACE,cAAC,EAAD,MAEFtD,SAASuD,eAAe,SAM1BV,M","file":"static/js/main.9d9b197e.chunk.js","sourcesContent":["export const GOOGLE_CLIENT_ID =\n  '716546716200-k27gns7n7emjglrn2bec5jui3323r0ua.apps.googleusercontent.com'; // Production\n// '307271403290-nirg6c5afjm47qtlloufj0kgrfd05ui7.apps.googleusercontent.com'; // Development\n","/* global gapi */\nimport React, {Component} from 'react';\nimport './App.css';\nimport {GOOGLE_CLIENT_ID} from \"./config\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false,\n    }\n  }\n\n  componentDidMount() {\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/platform.js\";\n    script.async = true;\n    script.defer = true;\n    script.onload = () => {\n      this.initAuth();\n    };\n    const meta = document.createElement(\"meta\");\n    meta.name = \"google-signin-client_id\";\n    meta.content = \"%REACT_APP_GOOGLE_ID_OF_WEB_CLIENT%\";\n    document.head.appendChild(meta);\n    document.head.appendChild(script);\n  }\n\n  initAuth() {\n    const successCallback = this.onSuccess.bind(this);\n\n    window.gapi.load('auth2', () => {\n      this.auth2 = gapi.auth2.init({\n        client_id: GOOGLE_CLIENT_ID,\n      })\n\n      this.auth2.then(() => {\n        console.log('on init');\n        this.setState({\n          isSignedIn: this.auth2.isSignedIn.get(),\n        });\n      });\n    });\n\n    window.gapi.load('signin2', function () {\n      // Method 3: render a sign in button\n      // using this method will show Signed In if the user is already signed in\n      var opts = {\n        width: 200,\n        height: 50,\n        client_id: GOOGLE_CLIENT_ID,\n        onsuccess: successCallback\n      }\n      gapi.signin2.render('loginButton', opts)\n    })\n  }\n\n  onSuccess() {\n    console.log('on success')\n    this.setState({\n      isSignedIn: true,\n      err: null\n    })\n  }\n\n  doLogout() {\n    let self = this;\n    this.auth2.signOut().then(\n      () => {\n        self.setState({\n          isSignedIn: false,\n          err: null\n        })\n        window.location.reload(false);\n      },\n      () => {\n        this.setState({\n          isSignedIn: true,\n          err: \"Failed to logout!\"\n        });\n      }\n    );\n  }\n\n  getContent() {\n    if (this.state.isSignedIn) {\n      return (\n        <div>\n          <p>hello user, you're signed in </p>\n          <button onClick={() => this.doLogout()}>Logout</button>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <p>You are not signed in. Click here to sign in.</p>\n          <button id=\"loginButton\">Login with Google</button>\n        </div>\n      )\n    }\n  }\n\n  getError() {\n    if (this.state.err) {\n      return (\n        <div>\n          <p className=\"error\">{this.state.err}</p>\n        </div>\n      )\n    } else return \"\";\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Agendar<sup>&trade;</sup></h1>\n          <h2>Heads-Up Display for being on time.</h2>\n          {this.getContent()}\n          {this.getError()}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}