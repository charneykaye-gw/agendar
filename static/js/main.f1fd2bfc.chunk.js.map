{"version":3,"sources":["config.js","App.js","reportWebVitals.js","index.js"],"names":["GOOGLE_CLIENT_CONFIG","apiKey","readMetaTag","clientId","discoveryDocs","scope","join","name","el","document","head","querySelector","content","console","error","App","props","state","isSignedIn","intervalId","lastFetchedMillis","calendarEvents","script","createElement","src","async","defer","onload","didLoadGoogleApi","appendChild","this","setState","setInterval","pulse","clearInterval","nowMillis","Date","now","successCallback","onSuccess","bind","window","gapi","load","auth2","init","then","get","opts","width","height","onsuccess","signin2","render","self","signOut","location","reload","alert","id","onClick","doLogout","renderCalendarEvents","className","renderContent","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"0OAeEA,G,MAAuB,CACrBC,OAdeC,EAAY,4BAe3BC,SAbiBD,EAAY,8BAc7BE,cAPsB,CACtB,iEAOAC,MAba,CACb,2DACA,qDACAC,KAAK,OAmBT,SAASJ,EAAYK,GACnB,IAAIC,EAAKC,SAASC,KAAKC,cAAd,gBAAqCJ,EAArC,eACT,OAAIC,GAAMA,EAAGI,QAAgBJ,EAAGI,SAChCC,QAAQC,MAAM,2CAA4CP,GACnD,O,IC2GMQ,E,kDApIb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,YAAY,EACZC,WAAY,KACZC,kBAAmB,KACnBC,eAAgB,IAND,E,gEAUE,IAAD,OACZC,EAASb,SAASc,cAAc,UACtCD,EAAOE,IAAM,yCACbF,EAAOG,OAAQ,EACfH,EAAOI,OAAQ,EACfJ,EAAOK,OAAS,WACd,EAAKC,oBASPnB,SAASC,KAAKmB,YAAYP,GAG1BQ,KAAKC,SAAS,CACZZ,WAAYa,aAAY,WACtB,EAAKC,UDfY,S,6CCqBrBC,cAAcJ,KAAKb,MAAME,c,8BAKzB,GAAKW,KAAKb,MAAMC,WAAhB,CACA,IAAIiB,EAAYC,KAAKC,QAChBP,KAAKb,MAAMG,mBAAqBU,KAAKb,MAAMG,kBAAoBe,ED1B5C,OC2BtBL,KAAKC,SAAS,CAACX,kBAAmBe,O,yCAIlB,IAAD,OACXG,EAAkBR,KAAKS,UAAUC,KAAKV,MAE5CW,OAAOC,KAAKC,KAAK,SAAS,WACxB,EAAKC,MAAQF,KAAKE,MAAMC,KAAK7C,GAC7B,EAAK4C,MAAME,MAAK,WACd,EAAKf,SAAS,CACZb,WAAY,EAAK0B,MAAM1B,WAAW6B,cAIxCN,OAAOC,KAAKC,KAAK,WAAW,WAG1B,IAAMK,EAAI,2BACLhD,GADK,IAERiD,MAAO,IACPC,OAAQ,GACRC,UAAWb,IAEbI,KAAKU,QAAQC,OAAO,cAAeL,Q,kCAKrClB,KAAKC,SAAS,CACZb,YAAY,M,iCAKd,IAAIoC,EAAOxB,KACXA,KAAKc,MAAMW,UAAUT,MACnB,WACEQ,EAAKvB,SAAS,CACZb,YAAY,EACZE,kBAAmB,OAErBqB,OAAOe,SAASC,QAAO,MAEzB,WACEC,MAAM,4B,6CAMV,OACE,8BACG5B,KAAKb,MAAMI,mB,sCAKD,IAAD,OACd,OAAIS,KAAKb,MAAMC,WAEX,gCACE,qBAAKyC,GAAG,eAAeC,QAAS,kBAAM,EAAKC,YAA3C,oBACC/B,KAAKgC,0BAKR,8BACE,wBAAQH,GAAG,cAAX,mC,+BAON,OACE,qBAAKI,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,yCAAW,qBAAKA,UAAU,OAAf,uBACX,kDAAoB,uBAApB,yBACCjC,KAAKkC,yB,GA/HEC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASrB,OACP,cAAC,IAAMsB,WAAP,UACE,cAAC,EAAD,MAEFlE,SAASmE,eAAe,SAM1BV,M","file":"static/js/main.f1fd2bfc.chunk.js","sourcesContent":["export const\n\n  GOOGLE_API_KEY = readMetaTag('REACT_APP_GOOGLE_API_KEY'),\n\n  GOOGLE_CLIENT_ID = readMetaTag('REACT_APP_GOOGLE_CLIENT_ID'),\n\n  GOOGLE_SCOPE = [\n    \"https://www.googleapis.com/auth/calendar.events.readonly\",\n    \"https://www.googleapis.com/auth/calendar.readonly\",\n  ].join(\" \"),\n\n  GOOGLE_DISCOVERY_DOCS = [\n    \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"\n  ],\n\n  GOOGLE_CLIENT_CONFIG = {\n    apiKey: GOOGLE_API_KEY,\n    clientId: GOOGLE_CLIENT_ID,\n    discoveryDocs: GOOGLE_DISCOVERY_DOCS,\n    scope: GOOGLE_SCOPE,\n  },\n\n  BEAT_INTERVAL_MILLIS = 1000, // once per second, like a clock\n\n  CACHE_INVALIDATE_MILLIS = 1000 * 60 * 60,\n\n  CALENDAR_FETCH_ROWS_MAX = 999;\n\nfunction readMetaTag(name) {\n  let el = document.head.querySelector(`[name=${name}][content]`);\n  if (el && el.content) return el.content;\n  console.error(\"Cannot retrieve value for META tag named\", name);\n  return \"n/a\";\n}\n","/* global gapi */\nimport React, {Component} from 'react';\nimport './App.css';\nimport {BEAT_INTERVAL_MILLIS, CACHE_INVALIDATE_MILLIS, GOOGLE_CLIENT_CONFIG,} from \"./config\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false,\n      intervalId: null,\n      lastFetchedMillis: null,\n      calendarEvents: [],\n    }\n  }\n\n  componentDidMount() {\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/platform.js\";\n    script.async = true;\n    script.defer = true;\n    script.onload = () => {\n      this.didLoadGoogleApi();\n    };\n    /*\n    FUTURE bring back?\n        const meta = document.createElement(\"meta\");\n        meta.name = \"google-signin-client_id\";\n        meta.content = \"%REACT_APP_GOOGLE_ID_OF_WEB_CLIENT%\";\n        document.head.appendChild(meta);\n    */\n    document.head.appendChild(script);\n\n    // Begin Interval\n    this.setState({\n      intervalId: setInterval(() => {\n        this.pulse();\n      }, BEAT_INTERVAL_MILLIS)\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  // Pulse happens every N milliseconds\n  pulse() {\n    if (!this.state.isSignedIn) return;\n    let nowMillis = Date.now();\n    if (!this.state.lastFetchedMillis || this.state.lastFetchedMillis < nowMillis - CACHE_INVALIDATE_MILLIS) {\n      this.setState({lastFetchedMillis: nowMillis});\n    }\n  }\n\n  didLoadGoogleApi() {\n    const successCallback = this.onSuccess.bind(this);\n\n    window.gapi.load('auth2', () => {\n      this.auth2 = gapi.auth2.init(GOOGLE_CLIENT_CONFIG)\n      this.auth2.then(() => {\n        this.setState({\n          isSignedIn: this.auth2.isSignedIn.get(),\n        });\n      });\n    });\n    window.gapi.load('signin2', function () {\n      // Method 3: render a sign in button\n      // using this method will show Signed In if the user is already signed in\n      const opts = {\n        ...GOOGLE_CLIENT_CONFIG,\n        width: 200,\n        height: 50,\n        onsuccess: successCallback\n      };\n      gapi.signin2.render('loginButton', opts)\n    })\n  }\n\n  onSuccess() {\n    this.setState({\n      isSignedIn: true,\n    })\n  }\n\n  doLogout() {\n    let self = this;\n    this.auth2.signOut().then(\n      () => {\n        self.setState({\n          isSignedIn: false,\n          lastFetchedMillis: null,\n        })\n        window.location.reload(false);\n      },\n      () => {\n        alert(\"Failed to sign out!\");\n      }\n    );\n  }\n\n  renderCalendarEvents() {\n    return (\n      <div>\n        {this.state.calendarEvents}\n      </div>\n    )\n  }\n\n  renderContent() {\n    if (this.state.isSignedIn) {\n      return (\n        <div>\n          <div id=\"logoutButton\" onClick={() => this.doLogout()}>Logout</div>\n          {this.renderCalendarEvents()}\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <button id=\"loginButton\">Login with Google</button>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Agendar<sup className=\"tiny\">&trade;</sup></h1>\n          <h2>Heads-Up Display<br/> for being on time.</h2>\n          {this.renderContent()}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}