{"version":3,"sources":["config.js","Content.js","App.js","reportWebVitals.js","index.js"],"names":["GOOGLE_CLIENT_CONFIG","apiKey","readMetaTag","clientId","discoveryDocs","scope","join","name","el","document","head","querySelector","content","console","error","CONTENT_ID_PREFIX","contentMap","els","querySelectorAll","i","length","cutContentFrom","id","replace","Content","props","className","dangerouslySetInnerHTML","__html","key","getElementById","innerHTML","remove","App","state","isMenuOpen","isFullscreen","isSignedIn","intervalId","lastFetchedMillis","calendarEvents","script","createElement","src","async","defer","onload","didLoadGoogleApi","appendChild","this","setState","setInterval","pulse","clearInterval","nowMillis","Date","now","fetchCalendarEvents","successCallback","onSuccess","bind","window","gapi","load","auth2","init","then","get","opts","width","height","onsuccess","signin2","render","signOut","location","reload","alert","documentElement","requestFullscreen","exitFullscreen","info","client","calendar","events","list","toISOString","response","result","items","displayEvents","event","when","start","dateTime","date","push","summary","onClick","doMenuButtonClicked","xmlns","viewBox","fill","d","doLogout","doCloseFullscreen","fillRule","doOpenFullscreen","renderCalendarEvents","renderFullscreenButton","renderMenuButton","renderMenuContent","renderApp","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"0OAeEA,G,MAAuB,CACrBC,OAdeC,EAAY,4BAe3BC,SAbiBD,EAAY,8BAc7BE,cAPsB,CACtB,iEAOAC,MAba,CACb,2DACA,qDACAC,KAAK,OAqBT,SAASJ,EAAYK,GACnB,IAAIC,EAAKC,SAASC,KAAKC,cAAd,gBAAqCJ,EAArC,eACT,OAAIC,GAAMA,EAAGI,QAAgBJ,EAAGI,SAChCC,QAAQC,MAAM,2CAA4CP,GACnD,OC3BT,IALA,IAAMQ,EAAoB,kBAGtBC,EAAa,GACbC,EAAMR,SAASS,iBAAT,eAAkCH,EAAlC,MACDI,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAAKE,EAAeJ,EAAIE,GAAGG,GAAGC,QAAQR,EAAmB,KAElF,SAASS,EAAQC,GACtB,IAAIlB,EAAOkB,EAAMlB,KACjB,OACE,qBAAKmB,UAAU,YAAYC,wBAAyB,CAClDC,OAAO,0BAAD,OAA4BZ,EAAWT,GAAvC,aAKZ,SAASc,EAAeQ,GACtB,IAAIrB,EAAKC,SAASqB,eAAT,UAA2Bf,GAA3B,OAA+Cc,IACxDb,EAAWa,GAAX,UAAqBrB,EAAGuB,WACxBvB,EAAGwB,S,IC4QUC,E,kDAnRb,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IACDS,MAAQ,CACXC,YAAY,EACZC,cAAc,EACdC,YAAY,EACZC,WAAY,KACZC,kBAAmB,KACnBC,eAAgB,IARD,E,gEAYE,IAAD,OACZC,EAAShC,SAASiC,cAAc,UACtCD,EAAOE,IAAM,yCACbF,EAAOG,OAAQ,EACfH,EAAOI,OAAQ,EACfJ,EAAOK,OAAS,WACd,EAAKC,oBASPtC,SAASC,KAAKsC,YAAYP,GAG1BQ,KAAKC,SAAS,CACZZ,WAAYa,aAAY,WACtB,EAAKC,UFxBY,S,6CE8BrBC,cAAcJ,KAAKf,MAAMI,c,8BAKzB,GAAKW,KAAKf,MAAMG,WAAhB,CACA,IAAIiB,EAAYC,KAAKC,QAChBP,KAAKf,MAAMK,mBAAqBU,KAAKf,MAAMK,kBAAoBe,EFnC5C,QEoCtBL,KAAKQ,sBACLR,KAAKC,SAAS,CAACX,kBAAmBe,Q,yCAIlB,IAAD,OACXI,EAAkBT,KAAKU,UAAUC,KAAKX,MAE5CY,OAAOC,KAAKC,KAAK,SAAS,WACxB,EAAKC,MAAQF,KAAKE,MAAMC,KAAKjE,GAC7B,EAAKgE,MAAME,MAAK,WACd,EAAKhB,SAAS,CACZb,WAAY,EAAK2B,MAAM3B,WAAW8B,cAIxCN,OAAOC,KAAKC,KAAK,WAAW,WAG1B,IAAMK,EAAI,2BACLpE,GADK,IAERqE,MAAO,IACPC,OAAQ,GACRC,UAAWb,IAEbI,KAAKU,QAAQC,OAAO,cAAeL,Q,kCAKrCnB,KAAKC,SAAS,CACZb,YAAY,M,iCAIJ,IAAD,OACTY,KAAKe,MAAMU,UAAUR,MACnB,WACE,EAAKhB,SAAS,CACZb,YAAY,EACZE,kBAAmB,OAErBsB,OAAOc,SAASC,QAAO,MAEzB,WACEC,MAAM,4B,4CAMN5B,KAAKf,MAAMC,WACbc,KAAKC,SAAS,CAACf,YAAY,IAE3Bc,KAAKC,SAAS,CAACf,YAAY,M,yCAGX,IAAD,OACb1B,SAASqE,gBAAgBC,kBAC3BtE,SAASqE,gBAAgBC,oBAAoBb,MAC3C,WACE,EAAKhB,SAAS,CAACd,cAAc,OAE/B,WACEyC,MAAM,yCAGPA,MAAM,oD,0CAGQ,IAAD,OACdpE,SAASuE,eACXvE,SAASuE,iBAAiBd,MACxB,WACE,EAAKhB,SAAS,CAACd,cAAc,OAE/B,WAEE,EAAKc,SAAS,CAACd,cAAc,OAG9ByC,MAAM,oD,4CAGU,IAAD,OAKpBhE,QAAQoE,KAAK,0BACbpB,OAAOC,KAAKC,KAAK,UAAU,WACzBD,KAAKoB,OAAOjB,KAAKjE,GAAsBkE,MAAK,WAC1CrD,QAAQoE,KAAK,8BACbnB,KAAKoB,OAAOnB,KAAK,WAAY,MAAM,WACjCD,KAAKoB,OAAOC,SAASC,OAAOC,KAAK,CAC/B,WAAc,UACd,SAAY,IAAI9B,MAAQ+B,cACxB,QAAY,IAAI/B,KAAKA,KAAKC,MFnIF,OEmI4C8B,cACpE,aAAe,EACf,cAAgB,EAChB,WFpIgB,GEqIhB,QAAW,cACVpB,MAAK,SAACqB,GACP,IACIpE,EADAiE,EAASG,EAASC,OAAOC,MACtBC,EAAgB,GAEvB,GAAIN,EAAOhE,OAAS,EAClB,IAAKD,EAAI,EAAGA,EAAIiE,EAAOhE,OAAQD,IAAK,CAClC,IAAIwE,EAAQP,EAAOjE,GACfyE,EAAOD,EAAME,MAAMC,SAClBF,IACHA,EAAOD,EAAME,MAAME,MAErBL,EAAcM,KAAK,sBAAKtE,UAAU,QAAf,UAAuCiE,EAAMM,QAA7C,KAAwDL,EAAxD,MAA4BD,EAAMrE,UAGvDoE,EAAgB,CAAC,qBAAKhE,UAAU,QAAf,wCAEnB,EAAKwB,SAAS,CAACV,eAAgBkD,kB,6CAQvC,OACE,8BACGzC,KAAKf,MAAMM,mB,yCAKE,IAAD,OACjB,OACE,qBAAKd,UAAS,mBAAcuB,KAAKf,MAAMC,WAAa,MAAQ,IACvDb,GAAG,aAAa4E,QAAS,kBAAM,EAAKC,uBADzC,SAEE,sBAAKC,MAAM,6BAA6B/B,MAAM,KAAKC,OAAO,KAAK+B,QAAQ,YAAvE,UACE,yCAGA,sBAAMC,KAAK,UACLC,EAAE,kQ,0CAMK,IAAD,OAClB,OAAItD,KAAKf,MAAMC,WACb,qBAAKb,GAAG,eAAe4E,QAAS,kBAAM,EAAKC,uBAA3C,SACE,sBAAK7E,GAAG,WAAR,UACE,qBAAKI,UAAU,WAAf,SACE,sBAAKA,UAAU,UAAf,UACE,cAACF,EAAD,CAASjB,KAAK,UACd,cAACiB,EAAD,CAASjB,KAAK,oBACd,cAACiB,EAAD,CAASjB,KAAK,UACd,cAACiB,EAAD,CAASjB,KAAK,eAIhB0C,KAAKf,MAAMG,WACT,qBAAKX,UAAU,yBAAyBwE,QAAS,kBAAM,EAAKM,YAA5D,oBAAuF,QAKrF,K,+CAGY,IAAD,OACvB,OAAIvD,KAAKf,MAAME,aACb,qBAAKV,UAAU,WAAWJ,GAAG,mBAAmB4E,QAAS,kBAAM,EAAKO,qBAApE,SACE,sBAAKL,MAAM,6BAA6B/B,MAAM,KAAKC,OAAO,KAAK+B,QAAQ,YAAvE,UACE,yDAGA,sBAAMK,SAAS,UAAUJ,KAAK,UACxBC,EAAE,wFAKZ,qBAAK7E,UAAU,WAAWJ,GAAG,mBAAmB4E,QAAS,kBAAM,EAAKS,oBAApE,SACE,sBAAKP,MAAM,6BAA6B/B,MAAM,KAAKC,OAAO,KAAK+B,QAAQ,YAAvE,UACE,0DAGA,sBAAMK,SAAS,UAAUJ,KAAK,UACxBC,EAAE,4F,kCAOd,OAAItD,KAAKf,MAAMG,WAEX,yBAAQX,UAAU,aAAlB,UACE,qCACCuB,KAAK2D,0BAKR,yBAAQlF,UAAU,aAAlB,UACE,yCAAW,qBAAKA,UAAU,OAAf,uBACX,kDAAoB,uBAApB,yBACA,wBAAQA,UAAU,cAAcJ,GAAG,cAAnC,+BACA,qBAAKI,UAAU,sBAAf,SACE,cAACF,EAAD,CAASjB,KAAK,2B,+BAQtB,OACE,sBAAKmB,UAAU,MAAf,UACGuB,KAAK4D,yBACL5D,KAAK6D,mBACL7D,KAAK8D,oBACL9D,KAAK+D,mB,GA/QIC,aCAHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASjD,OACP,cAAC,IAAMkD,WAAP,UACE,cAAC,EAAD,MAEFlH,SAASqB,eAAe,SAM1BoF,M","file":"static/js/main.65579eb8.chunk.js","sourcesContent":["export const\n\n  GOOGLE_API_KEY = readMetaTag('REACT_APP_GOOGLE_API_KEY'),\n\n  GOOGLE_CLIENT_ID = readMetaTag('REACT_APP_GOOGLE_CLIENT_ID'),\n\n  GOOGLE_SCOPE = [\n    \"https://www.googleapis.com/auth/calendar.events.readonly\",\n    \"https://www.googleapis.com/auth/calendar.readonly\",\n  ].join(\" \"),\n\n  GOOGLE_DISCOVERY_DOCS = [\n    \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"\n  ],\n\n  GOOGLE_CLIENT_CONFIG = {\n    apiKey: GOOGLE_API_KEY,\n    clientId: GOOGLE_CLIENT_ID,\n    discoveryDocs: GOOGLE_DISCOVERY_DOCS,\n    scope: GOOGLE_SCOPE,\n  },\n\n  BEAT_INTERVAL_MILLIS = 1000, // once per second, like a clock\n\n  CACHE_INVALIDATE_MILLIS = 1000 * 60 * 60,\n\n  CALENDAR_FETCH_TO_FUTURE_MILLIS = 1000 * 60 * 60 * 24,\n\n  CALENDAR_FETCH_ROWS_MAX = 99;\n\nfunction readMetaTag(name) {\n  let el = document.head.querySelector(`[name=${name}][content]`);\n  if (el && el.content) return el.content;\n  console.error(\"Cannot retrieve value for META tag named\", name);\n  return \"n/a\";\n}\n","import React from \"react\";\n\nconst CONTENT_ID_PREFIX = \"static-content-\";\n\n// Initialize by cutting all content found in index.html\nlet contentMap = {};\nlet els = document.querySelectorAll(`[id^=${CONTENT_ID_PREFIX}]`);\nfor (let i = 0; i < els.length; i++) cutContentFrom(els[i].id.replace(CONTENT_ID_PREFIX, \"\"));\n\nexport function Content(props) {\n  let name = props.name;\n  return (\n    <div className=\"container\" dangerouslySetInnerHTML={{\n      __html: `<div class=\"container\">${contentMap[name]}</div>`\n    }}/>\n  );\n}\n\nfunction cutContentFrom(key) {\n  let el = document.getElementById(`${CONTENT_ID_PREFIX}${key}`);\n  contentMap[key] = `${el.innerHTML}`;\n  el.remove();\n}\n\n","/* global gapi */\nimport React, {Component} from 'react';\nimport './App.css';\nimport {\n  BEAT_INTERVAL_MILLIS,\n  CACHE_INVALIDATE_MILLIS,\n  CALENDAR_FETCH_ROWS_MAX,\n  CALENDAR_FETCH_TO_FUTURE_MILLIS,\n  GOOGLE_CLIENT_CONFIG,\n} from \"./config\";\nimport {Content} from \"./Content\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMenuOpen: false,\n      isFullscreen: false,\n      isSignedIn: false,\n      intervalId: null,\n      lastFetchedMillis: null,\n      calendarEvents: [],\n    }\n  }\n\n  componentDidMount() {\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/platform.js\";\n    script.async = true;\n    script.defer = true;\n    script.onload = () => {\n      this.didLoadGoogleApi();\n    };\n    /*\n    FUTURE bring back?\n        const meta = document.createElement(\"meta\");\n        meta.name = \"google-signin-client_id\";\n        meta.content = \"%REACT_APP_GOOGLE_ID_OF_WEB_CLIENT%\";\n        document.head.appendChild(meta);\n    */\n    document.head.appendChild(script);\n\n    // Begin Interval\n    this.setState({\n      intervalId: setInterval(() => {\n        this.pulse();\n      }, BEAT_INTERVAL_MILLIS)\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  // Pulse happens every N milliseconds\n  pulse() {\n    if (!this.state.isSignedIn) return;\n    let nowMillis = Date.now();\n    if (!this.state.lastFetchedMillis || this.state.lastFetchedMillis < nowMillis - CACHE_INVALIDATE_MILLIS) {\n      this.fetchCalendarEvents()\n      this.setState({lastFetchedMillis: nowMillis});\n    }\n  }\n\n  didLoadGoogleApi() {\n    const successCallback = this.onSuccess.bind(this);\n\n    window.gapi.load('auth2', () => {\n      this.auth2 = gapi.auth2.init(GOOGLE_CLIENT_CONFIG)\n      this.auth2.then(() => {\n        this.setState({\n          isSignedIn: this.auth2.isSignedIn.get(),\n        });\n      });\n    });\n    window.gapi.load('signin2', function () {\n      // Method 3: render a sign in button\n      // using this method will show Signed In if the user is already signed in\n      const opts = {\n        ...GOOGLE_CLIENT_CONFIG,\n        width: 200,\n        height: 50,\n        onsuccess: successCallback\n      };\n      gapi.signin2.render('loginButton', opts)\n    })\n  }\n\n  onSuccess() {\n    this.setState({\n      isSignedIn: true,\n    })\n  }\n\n  doLogout() {\n    this.auth2.signOut().then(\n      () => {\n        this.setState({\n          isSignedIn: false,\n          lastFetchedMillis: null,\n        })\n        window.location.reload(false);\n      },\n      () => {\n        alert(\"Failed to sign out!\");\n      }\n    );\n  }\n\n  doMenuButtonClicked() {\n    if (this.state.isMenuOpen)\n      this.setState({isMenuOpen: false});\n    else\n      this.setState({isMenuOpen: true});\n  }\n\n  doOpenFullscreen() {\n    if (document.documentElement.requestFullscreen)\n      document.documentElement.requestFullscreen().then(\n        () => {\n          this.setState({isFullscreen: true})\n        },\n        () => {\n          alert(\"Failed to open in fullscreen mode!\");\n        }\n      );\n    else alert(\"Fullscreen mode not supported in your browser!\");\n  }\n\n  doCloseFullscreen() {\n    if (document.exitFullscreen)\n      document.exitFullscreen().then(\n        () => {\n          this.setState({isFullscreen: false});\n        },\n        () => {\n          // quietly assume that we have failed to detect somehow that fullscreen was already exited\n          this.setState({isFullscreen: false});\n        }\n      );\n    else alert(\"Fullscreen mode not supported in your browser!\");\n  }\n\n  fetchCalendarEvents() {\n    // let today = new Date(); //today date\n    // let userEmail = \"xxx\";\n    // let userTimeZone = \"xxx\";\n\n    console.info(\"Will initialize client\");\n    window.gapi.load('client', () => {\n      gapi.client.init(GOOGLE_CLIENT_CONFIG).then(() => {\n        console.info(\"Will fetch calendar events\");\n        gapi.client.load('calendar', 'v3', () => {\n          gapi.client.calendar.events.list({\n            'calendarId': 'primary',\n            'timeMin': (new Date()).toISOString(),\n            'timeMax': (new Date(Date.now() + CALENDAR_FETCH_TO_FUTURE_MILLIS)).toISOString(),\n            'showDeleted': false,\n            'singleEvents': true,\n            'maxResults': CALENDAR_FETCH_ROWS_MAX,\n            'orderBy': 'startTime'\n          }).then((response) => {\n            let events = response.result.items;\n            let i, displayEvents = [];\n\n            if (events.length > 0) {\n              for (i = 0; i < events.length; i++) {\n                let event = events[i];\n                let when = event.start.dateTime;\n                if (!when) {\n                  when = event.start.date;\n                }\n                displayEvents.push(<div className=\"event\" key={event.id}>{event.summary} ({when})</div>);\n              }\n            } else {\n              displayEvents = [<div className=\"event\">No upcoming events found.</div>];\n            }\n            this.setState({calendarEvents: displayEvents});\n          });\n        });\n      });\n    });\n  }\n\n  renderCalendarEvents() {\n    return (\n      <div>\n        {this.state.calendarEvents}\n      </div>\n    )\n  }\n\n  renderMenuButton() {\n    return (\n      <div className={`uiButton ${this.state.isMenuOpen ? 'lit' : ''}`}\n           id=\"menuButton\" onClick={() => this.doMenuButtonClicked()}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\">\n          <title>\n            Menu\n          </title>\n          <path fill=\"#ffffff\"\n                d=\"M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z\"/>\n        </svg>\n      </div>\n    );\n  }\n\n  renderMenuContent() {\n    if (this.state.isMenuOpen) return (\n      <div id=\"menuBackdrop\" onClick={() => this.doMenuButtonClicked()}>\n        <div id=\"menuBody\">\n          <div className=\"menuItem\">\n            <div className=\"content\">\n              <Content name=\"intro\"/>\n              <Content name=\"privacy-promise\"/>\n              <Content name=\"about\"/>\n              <Content name=\"legal\"/>\n            </div>\n          </div>\n          {\n            this.state.isSignedIn ?\n              <div className=\"menuItem menuSelection\" onClick={() => this.doLogout()}>Logout</div> : ''\n          }\n        </div>\n      </div>\n    );\n    else return \"\";\n  }\n\n  renderFullscreenButton() {\n    if (this.state.isFullscreen) return (\n      <div className=\"uiButton\" id=\"fullscreenButton\" onClick={() => this.doCloseFullscreen()}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n          <title>\n            Exit Fullscreen Mode\n          </title>\n          <path fillRule=\"evenodd\" fill=\"#ffffff\"\n                d=\"M7 7V1H5v4H1v2h6zM5 19h2v-6H1v2h4v4zm10-4h4v-2h-6v6h2v-4zm0-8h4V5h-4V1h-2v6h2z\"/>\n        </svg>\n      </div>\n    );\n    else return (\n      <div className=\"uiButton\" id=\"fullscreenButton\" onClick={() => this.doOpenFullscreen()}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n          <title>\n            Enter Fullscreen Mode\n          </title>\n          <path fillRule=\"evenodd\" fill=\"#ffffff\"\n                d=\"M1 1v6h2V3h4V1H1zm2 12H1v6h6v-2H3v-4zm14 4h-4v2h6v-6h-2v4zm0-16h-4v2h4v4h2V1h-2z\"/>\n        </svg>\n      </div>\n    );\n  }\n\n  renderApp() {\n    if (this.state.isSignedIn) {\n      return (\n        <header className=\"App-header\">\n          <h6>Now</h6>\n          {this.renderCalendarEvents()}\n        </header>\n      )\n    } else {\n      return (\n        <header className=\"App-header\">\n          <h1>Agendar<sup className=\"tiny\">&trade;</sup></h1>\n          <h2>Heads-Up Display<br/> for being on time.</h2>\n          <button className=\"space-above\" id=\"loginButton\">Login with Google</button>\n          <div className=\"content space-above\">\n            <Content name=\"privacy-promise\"/>\n          </div>\n        </header>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.renderFullscreenButton()}\n        {this.renderMenuButton()}\n        {this.renderMenuContent()}\n        {this.renderApp()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}